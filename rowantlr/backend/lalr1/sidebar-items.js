initSidebarItems({"enum":[["Action","An entry of the `ACTION` table."]],"fn":[["all_goto_sets","Calculate all non-empty `GOTO(I, X)` for each `X ∈ V`."],["all_kernel_sets","Calculate all kernel sets of a given [`Grammar`]."],["build","Build LALR kernel sets table, and the `GOTO` table."],["closure","The `CLOSURE` of an item set."],["resolve_tags","Resolve the tags with a [`TagResolver`] in case their is inter-dependencies among them."]],"mod":[["simple","So-said “simple” types, with the tag types muted."],["simulation","Simulation of `LALR(1)` parsing."]],"struct":[["Entry","An LALR entry in a state set."],["FrozenKernel","Kernel sets frozen for efficient access."],["KernelSets","All kernel sets for a [`Grammar`], together with the full `GOTO` table."],["LalrConflict","Conflicts in LALR kernel sets."],["Lookaheads","A set of [`Lookahead`] tokens."],["RawGotoSets","Iterables for traversing `GOTO` sets, always call [`RawGotoSets::get`] on this type."],["Rule","A production rule used in a state set."],["Table","The LALR parsing table."]],"trait":[["TagManager","Tag managers control the behaviour of [`closure`] when an [`Entry`] is to be generated."],["TagResolver","Tags in LALR state sets can be resolved to eliminate their inter-dependency."]],"type":[["Kernel","An LALR kernel state set (all `A -> . β` rules omitted). This property is not enforced, this type is only for better readability."],["NonTerminal","Non-terminal symbols, represented as their index in the [`Grammar`], including the internal start symbol `S` (indexed 0)."],["State","An LALR state set."]]});